# Launch & Build a set of containers with workers and one service for them.
services: 
  main-node:
    build: ./main_node/
    tty: true
    container_name: main-node
    environment:
      - EXP_DUMP_NAME=undefined
    restart: on-failure

  event_service:
    build: ./event_service/
    stdin_open: true
    tty: true
    container_name: event-service
    ports:
        - 49153:49153
        - 49154:49154
        - 49155:49155
    restart: on-failure

  mongo-db:
    image: mongo:4.4.0
    container_name: mongo-db
    restart: on-failure
    environment:
        MONGO_INITDB_DATABASE: BRISE_db
    ports:
        - 27017:27017
    volumes:
      - ./mongo_db/init.js:/docker-entrypoint-initdb.d/init.js

  worker_service:
    build: ./worker_service/
    stdin_open: true
    tty: true
    container_name: worker-service
    restart: on-failure

  front-end:
    build: ./front_end/
    container_name: front-end
    tty: true
    ports:
        - 80:80
    restart: on-failure

  worker:
    build: ./worker/
    restart: on-failure

  waffle:
    build: ./waffle/
    command: python3 manage.py runserver 0.0.0.0:8000
    container_name: waffle
    tty: true
    ports:
      - 8000:8000
    restart: on-failure

  mongo-db-test:
    image: mongo:4.4.0
    container_name: mongo-db-test
    restart: on-failure
    environment:
        MONGO_INITDB_DATABASE: test_db
    ports:
        - 27017:27017
    volumes:
      - ./mongo_db/init_test.js:/docker-entrypoint-initdb.d/init.js