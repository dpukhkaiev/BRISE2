{
    "Context": {
        "TaskConfiguration": {
            "TaskName": "naiveBayes_mock",
            "MaxTimeToRunTask": 10,
            "TimeUnit": "seconds",
            "Scenario": {
                "ws_file": "NB_final_result.csv"
            },
            "Objectives": {
                "PrecisionAtNinentyNineRecall": {
                    "Name": "PrecisionAtNinentyNineRecall",
                    "DataType": "float",
                    "Minimization": true,
                    "MinExpectedValue": 0,
                    "MaxExpectedValue": 1
                }
            }
        },
        "SearchSpace": {
            "laplace_correction": {
                "True": {
                    "Type": "Category"
                },
                "False": {
                    "Type": "Category"
                },
                "Categories": [
                    "Context.SearchSpace.laplace_correction.True",
                    "Context.SearchSpace.laplace_correction.False"
                ],
                "Default": "Context.SearchSpace.laplace_correction.True",
                "Type": "NominalHyperparameter",
                "Level": 0
            },
            "estimation_mode": {
                "full": {
                    "bandwidth_selection": {
                        "heuristic": {
                            "Type": "Category"
                        },
                        "fix": {
                            "Type": "Category"
                        },
                        "Categories": [
                            "Context.SearchSpace.estimation_mode.full.bandwidth_selection.heuristic",
                            "Context.SearchSpace.estimation_mode.full.bandwidth_selection.fix"
                        ],
                        "Default": "Context.SearchSpace.estimation_mode.full.bandwidth_selection.heuristic",
                        "Type": "NominalHyperparameter",
                        "Level": 1
                    },
                    "Type": "Category"
                },
                "greedy": {
                    "minimum_bandwidth": {
                        "Lower": 0.001,
                        "Upper": 1000,
                        "Default": 0.5,
                        "Type": "FloatHyperparameter",
                        "Level": 1
                    },
                    "number_of_kernels": {
                        "Lower": 1,
                        "Upper": 1000,
                        "Default": 1,
                        "Type": "IntegerHyperparameter",
                        "Level": 1
                    },
                    "Type": "Category"
                },
                "Categories": [
                    "Context.SearchSpace.estimation_mode.full",
                    "Context.SearchSpace.estimation_mode.greedy"
                ],
                "Default": "Context.SearchSpace.estimation_mode.greedy",
                "Type": "NominalHyperparameter",
                "Level": 0
            },
            "bandwidth": {
                "Lower": 0.001,
                "Upper": 1000,
                "Default": 10,
                "Type": "FloatHyperparameter",
                "Level": 0
            },
            "use_application_grid": {
                "True": {
                    "application_grid_size": {
                        "Lower": 10,
                        "Upper": 1000,
                        "Default": 100,
                        "Type": "IntegerHyperparameter",
                        "Level": 1
                    },
                    "Type": "Category"
                },
                "False": {
                    "Type": "Category"
                },
                "Categories": [
                    "Context.SearchSpace.use_application_grid.True",
                    "Context.SearchSpace.use_application_grid.False"
                ],
                "Default": "Context.SearchSpace.use_application_grid.False",
                "Type": "NominalHyperparameter",
                "Level": 0
            },
            "Structure": {
                "Hierarchical": {}
            }
        }
    },
    "ConfigurationSelection": {
        "SamplingStrategy": {
            "Sobol": {
                "Seed": 1,
                "Type": "sobol"
            }
        },
        "Predictor": {
            "WindowSize": 1.0,
            "Model_0": {
                "Surrogate": {
                    "ConfigurationTransformers": {
                        "NominalTransformer": {
                            "BinaryEncoder": {
                                "Type": "binary_transformer",
                                "Class": "brise.BinaryEncoder"
                            }
                        }
                    },
                    "Instance": {
                        "GaussianProcessRegressor": {
                            "MultiObjective": true,
                            "Parameters": {
                                "n_restarts_optimizer": 3
                            },
                            "Type": "sklearn_model_wrapper",
                            "Class": "sklearn.gaussian_process.GaussianProcessRegressor"
                        }
                    }
                },
                "Optimizer": {
                    "Instance": {
                        "MOEA": {
                            "Generations": 10,
                            "PopulationSize": 100,
                            "Algorithms": {
                                "GACO": {
                                    "MultiObjective": {}
                                }
                            },
                            "Type": "moea"
                        }
                    }
                },
                "Validator": {
                    "ExternalValidator": {
                        "MockValidator": {
                            "Type": "mock_validator"
                        }
                    }
                },
                "CandidateSelector": {
                    "BestMultiPointProposal": {
                        "NumberOfPoints": 1,
                        "Type": "best_multi_point"
                    }
                }
            },
            "Model_1": {
                "Surrogate": {
                    "ConfigurationTransformers": {
                        "NominalTransformer": {
                            "BinaryEncoder": {
                                "Type": "binary_transformer",
                                "Class": "brise.BinaryEncoder"
                            }
                        }
                    },
                    "Instance": {
                        "GaussianProcessRegressor": {
                            "MultiObjective": true,
                            "Parameters": {
                                "n_restarts_optimizer": 3
                            },
                            "Type": "sklearn_model_wrapper",
                            "Class": "sklearn.gaussian_process.GaussianProcessRegressor"
                        }
                    }
                },
                "Optimizer": {
                    "Instance": {
                        "MOEA": {
                            "Generations": 10,
                            "PopulationSize": 100,
                            "Algorithms": {
                                "GACO": {
                                    "MultiObjective": {}
                                }
                            },
                            "Type": "moea"
                        }
                    }
                },
                "Validator": {
                    "ExternalValidator": {
                        "MockValidator": {
                            "Type": "mock_validator"
                        }
                    }
                },
                "CandidateSelector": {
                    "BestMultiPointProposal": {
                        "NumberOfPoints": 1,
                        "Type": "best_multi_point"
                    }
                }
            }
        }
    },
    "RepetitionManager": {
        "MaxFailedTasksPerConfiguration": 1,
        "Instance": {
            "QuantityBased": {
                "MaxTasksPerConfiguration": 1,
                "Type": "quantity_based"
            }
        }
    },
    "StopCondition": {
        "Instance": {
            "QuantityBasedSC": {
                "Parameters": {
                    "MaxConfigs": 100
                },
                "Type": "quantity_based",
                "Name": "q"
            }
        },
        "StopConditionTriggerLogic": {
            "Expression": "q",
            "InspectionParameters": {
                "RepetitionPeriod": 1,
                "TimeUnit": "seconds"
            }
        }
    }
}