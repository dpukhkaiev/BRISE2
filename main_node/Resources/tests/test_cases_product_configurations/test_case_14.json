{
    "Context": {
        "TaskConfiguration": {
            "TaskName": "test",
            "MaxTimeToRunTask": 10,
            "TimeUnit": "seconds",
            "Scenario": {},
            "Objectives": {
                "Y1": {
                    "Name": "Y1",
                    "DataType": "float",
                    "Minimization": true,
                    "MinExpectedValue": 0,
                    "MaxExpectedValue": 100
                }
            }
        },
        "SearchSpace": {
            "X1": {
                "Lower": 0.0,
                "Upper": 1.0,
                "Default": 0.0,
                "Type": "FloatHyperparameter",
                "Level": 0
            },
            "X2": {
                "Lower": 0.0,
                "Upper": 1.0,
                "Default": 0.5,
                "Type": "FloatHyperparameter",
                "Level": 0
            },
            "Structure": {
                "Flat": {}
            }
        }
    },
    "ConfigurationSelection": {
        "SamplingStrategy": {
            "Sobol": {
                "Seed": 1,
                "Type": "sobol"
            }
        },
        "Predictor": {
            "WindowSize": 1.0,
            "Model": {
                "Surrogate": {
                    "Instance": {
                        "LinearRegression": {
                            "MultiObjective": false,
                            "Type": "sklearn_model_wrapper",
                            "Class": "sklearn.linear_model.LinearRegression"
                        }
                    }
                },
                "Optimizer": {
                    "Instance": {
                        "MOEA": {
                            "Generations": 5,
                            "PopulationSize": 100,
                            "Algorithms": {
                                "PSO": {
                                    "MultiObjective": false
                                }
                            },
                            "Type": "moea"
                        }
                    }
                },
                "Validator": {
                    "ExternalValidator": {
                        "MockValidator": {
                            "Type": "mock_validator"
                        }
                    }
                },
                "CandidateSelector": {
                    "BestMultiPointProposal": {
                        "NumberOfPoints": 1,
                        "Type": "best_multi_point"
                    }
                }
            }
        }
    },
    "RepetitionManager": {
        "MaxFailedTasksPerConfiguration": 1,
        "Instance": {
            "AcceptableErrorBased": {
                "MinTasksPerConfiguration": 2,
                "MaxTasksPerConfiguration": 3,
                "BaseAcceptableError": 10.0,
                "ConfidenceLevel": 0.8,
                "Type": "acceptable_error_based",
                "ExperimentAware": {
                    "MaxAcceptableError": 50.0,
                    "RatioMax": 7.0,
                    "MinTasksPerUnderperformingConfiguration": 1
                }
            }
        }
    },
    "StopCondition": {
        "Instance": {
            "FewShotLearningBasedSC": {
                "Type": "few_shot_learning_based",
                "Name": "f"
            }
        },
        "StopConditionTriggerLogic": {
            "Expression": "f",
            "InspectionParameters": {
                "RepetitionPeriod": 1,
                "TimeUnit": "seconds"
            }
        }
    },
    "TransferLearning": {
        "TransferExpediencyDetermination": {
            "SamplingLandmarkBased": {
                "MinNumberOfSamples": 10,
                "Type": "sampling_landmark_based",
                "Comparator": {
                    "RGPE": {
                        "Type": "rgpe_comparator"
                    }
                },
                "ExperimentsQuantity": {
                    "FixedQuantity": {
                        "NumberOfSimilarExperiments": 1
                    }
                }
            }
        },
        "ModelRecommendation": {
            "FewShotRecommendation": {
                "Type": "few_shot"
            }
        }
    }
}